datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?   
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  
  access_token      String?  
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  
  session_state     String?
  user              User     @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Course {
  id          String   @id @default(cuid())
  courseId    String
  summary     String
  lessonUnits Int
  ects        Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // Optional: Verknüpfung mit einem User, wenn es benutzerspezifisch ist:
  // userId      String
  // user        User     @relation(fields: [userId], references: [id])
}

model Attendance {
  id             String   @id @default(cuid())
  courseId       String
  summary        String
  totalLessonUnits Int
  missedLessonUnits Int
  progress       Float    
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Falls du sie mit einem User verknüpfen möchtest:
  // userId         String
  // user           User     @relation(fields: [userId], references: [id])
}